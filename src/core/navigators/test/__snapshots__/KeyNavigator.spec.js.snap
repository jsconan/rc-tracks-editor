// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KeyNavigator has a static method which identifies the keystroke from the key " " when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key " " when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key " " when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "A" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "A" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "A" when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowDown" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowDown" when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowDown" when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowLeft" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowLeft" when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowLeft" when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowRight" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowRight" when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowRight" when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowUp" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowUp" when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "ArrowUp" when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Backspace" when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Backspace" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Backspace" when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Del" when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Del" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Del" when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Delete" when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Delete" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Delete" when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Down" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Down" when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Down" when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Enter" when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Enter" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Enter" when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Esc" when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Esc" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Esc" when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Escape" when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Escape" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Escape" when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Insert" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Insert" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Insert" when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Left" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Left" when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Left" when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Right" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Right" when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Right" when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Spacebar" when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Spacebar" when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Spacebar" when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Up" when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Up" when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator has a static method which identifies the keystroke from the key "Up" when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key " " when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "both" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "A" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "vertical" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowDown" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "horizontal" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowLeft" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "horizontal" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowRight" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "vertical" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "ArrowUp" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Backspace" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "backspace",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Del" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Delete" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "delete",
  "keystroke": "delete",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "vertical" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Down" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "down",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Enter" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "enter",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Esc" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Escape" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "cancel",
  "keystroke": "escape",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "both" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Insert" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "horizontal" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "left",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Left" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "horizontal" and when the allowed type is "move" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "next",
  "keystroke": "right",
  "mode": "horizontal",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Right" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "both" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "both" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "horizontal" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "vertical" and when the allowed type is "control" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "vertical" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Spacebar" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "validate",
  "keystroke": "spacebar",
  "mode": "both",
  "type": "control",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "both" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "both" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "both" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "horizontal" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "horizontal" and when the allowed type is "move" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "horizontal" and when the allowed type is "undefined" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "vertical" and when the allowed type is "control" 1`] = `null`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "vertical" and when the allowed type is "move" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;

exports[`KeyNavigator identifies the keystroke from the key "Up" when being in mode "vertical" and when the allowed type is "undefined" 1`] = `
{
  "action": "previous",
  "keystroke": "up",
  "mode": "vertical",
  "type": "move",
}
`;
