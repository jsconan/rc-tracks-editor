// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TilesList can build a track adding tiles at the first position with a particular type 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
      "curved-tile-2" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      CurvedTileModel {
        "direction": "left",
        "id": "id-15",
        "ratio": 2,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-14",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track adding tiles at the first position with the default specifications 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 2,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-13",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-12",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track adding tiles at the last position with a particular type 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "curved-tile-2" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      CurvedTileModel {
        "direction": "left",
        "id": "id-11",
        "ratio": 2,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track adding tiles at the last position with the default specifications 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-10",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles after a position in the middle 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 4,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-55",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-56",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-58",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-57",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles after an inexistent position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-48",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles after the first position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 3,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-49",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-51",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-50",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles after the last position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 3,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-52",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-53",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-54",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles after with a particular type 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
      "curved-tile-2" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-59",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      CurvedTileModel {
        "direction": "left",
        "id": "id-60",
        "ratio": 2,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles before a position in the middle 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 4,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-42",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-45",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-43",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-44",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles before an inexistent position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-35",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles before the first position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 3,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-38",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-36",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-37",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles before the last position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 3,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-39",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-41",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-40",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track inserting tiles before with a particular type 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
      "curved-tile-2" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      CurvedTileModel {
        "direction": "left",
        "id": "id-47",
        "ratio": 2,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-46",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track removing tiles at inexistent position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-25",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track removing tiles from the end 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 2,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-22",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-23",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track removing tiles from the middle 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 2,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-19",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-21",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track removing tiles from the start 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 2,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-17",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-18",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track replacing tiles at inexistent position 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-34",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track replacing tiles with a tile having a particular type 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 2,
      "curved-tile-2" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-30",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-31",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      CurvedTileModel {
        "direction": "left",
        "id": "id-33",
        "ratio": 2,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track replacing tiles with a tile having default specifications 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 3,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-26",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-29",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-28",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can build a track with the given size 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {},
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can clear the list 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {},
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can export to an object 1`] = `
Array [
  Object {
    "direction": "right",
    "ratio": 1,
    "type": "curved-tile",
  },
]
`;

exports[`TilesList can import from an object 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-63",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can import from an object 2`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
      "curved-tile-1" => 2,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      CurvedTileModel {
        "direction": "left",
        "id": "id-64",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-65",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      CurvedTileModel {
        "direction": "right",
        "id": "id-66",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the stats 1`] = `
Counter {
  "counters": Map {},
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 2`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 1,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 3`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 2,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 4`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 1,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 5`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 0,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 6`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 0,
    "straight-tile-1" => 1,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 7`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 0,
    "straight-tile-1" => 2,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 8`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 0,
    "straight-tile-1" => 3,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 9`] = `
Counter {
  "counters": Map {},
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 10`] = `
Counter {
  "counters": Map {
    "straight-tile-1" => 3,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the stats 11`] = `
Counter {
  "counters": Map {
    "straight-tile-1" => 3,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {},
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 2`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "curved-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      CurvedTileModel {
        "direction": "right",
        "id": "id-68",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 3`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "curved-tile-1" => 2,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      CurvedTileModel {
        "direction": "right",
        "id": "id-69",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      CurvedTileModel {
        "direction": "right",
        "id": "id-68",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 4`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "curved-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      CurvedTileModel {
        "direction": "right",
        "id": "id-69",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 5`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "curved-tile-1" => 0,
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-70",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 6`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "curved-tile-1" => 0,
      "straight-tile-1" => 2,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-71",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-70",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 7`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {
      "curved-tile-1" => 0,
      "straight-tile-1" => 3,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-71",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-70",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-72",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 8`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {},
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 9`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 4,
    "barrierWidth": 5,
    "laneWidth": 80,
  },
  "stats": Counter {
    "counters": Map {},
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-73",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-74",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-75",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 4,
          "barrierWidth": 5,
          "laneWidth": 80,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can notify changes for changes applying to the tiles 10`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 2,
    "barrierWidth": 1,
    "laneWidth": 10,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 3,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-73",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 2,
          "barrierWidth": 1,
          "laneWidth": 10,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-74",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 2,
          "barrierWidth": 1,
          "laneWidth": 10,
        },
      },
      StraightTileModel {
        "direction": "right",
        "id": "id-75",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 2,
          "barrierWidth": 1,
          "laneWidth": 10,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;

exports[`TilesList can rebuilds the stats 1`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 1,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can rebuilds the stats 2`] = `
Counter {
  "counters": Map {
    "curved-tile-1" => 0,
    "curved-tile-3" => 1,
  },
  "notify": [Function],
  "subscribe": [Function],
}
`;

exports[`TilesList can set the specifications of the tile 1`] = `
TilesList {
  "specs": TileSpecifications {
    "barrierChunks": 2,
    "barrierWidth": 1,
    "laneWidth": 10,
  },
  "stats": Counter {
    "counters": Map {
      "straight-tile-1" => 1,
    },
    "notify": [Function],
    "subscribe": [Function],
  },
  "subscribe": [Function],
  "tiles": List {
    "list": Array [
      StraightTileModel {
        "direction": "right",
        "id": "id-0",
        "ratio": 1,
        "specs": TileSpecifications {
          "barrierChunks": 2,
          "barrierWidth": 1,
          "laneWidth": 10,
        },
      },
    ],
    "notify": [Function],
    "subscribe": [Function],
  },
}
`;
